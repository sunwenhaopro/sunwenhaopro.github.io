(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{562:function(t,s,e){"use strict";e.r(s);var a=e(7),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mybatis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis"}},[t._v("#")]),t._v(" Mybatis")]),t._v(" "),s("h3",{attrs:{id:"一-和-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-和-的区别"}},[t._v("#")]),t._v(" 一.#和$的区别")]),t._v(" "),s("h5",{attrs:{id:"一-与-区别说通俗一点就是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-与-区别说通俗一点就是"}},[t._v("#")]),t._v(" 一 .#与$区别说通俗一点就是")]),t._v(" "),s("p",[t._v("​     $中间的变量就是直接替换成值的")]),t._v(" "),s("p",[t._v("​     #会根据变量的类型来进行替换")]),t._v(" "),s("p",[t._v("​     比如articleTitle的类型是"),s("code",[t._v("string")]),t._v(', 值是"标题"的时候')]),t._v(" "),s("p",[t._v("​     "),s("code",[t._v("$articleTitle$")]),t._v(" = 标题")]),t._v(" "),s("p",[t._v("​      "),s("code",[t._v("#articleTitle#")]),t._v("= '标题'")]),t._v(" "),s("h5",{attrs:{id:"二-的作用实际上是字符串拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-的作用实际上是字符串拼接"}},[t._v("#")]),t._v(" 二. $ 的作用实际上是字符串拼接，")]),t._v(" "),s("p",[t._v("​     "),s("code",[t._v("select * from $tableName$")])]),t._v(" "),s("p",[t._v("​     等效于")]),t._v(" "),s("p",[t._v("​    ·")]),t._v(" "),s("p",[t._v("​    #用于变量替换")]),t._v(" "),s("p",[s("code",[t._v("select * from table where id = #id#")])]),t._v(" "),s("p",[t._v("​    等效于")]),t._v(" "),s("p",[t._v("​    "),s("code",[t._v('prepareStement =stmt.createPrepareStement("select * from table where id = ?")')])]),t._v(" "),s("p",[t._v("​    "),s("code",[t._v("prepareStement.setString(1,'abc');")])]),t._v(" "),s("h5",{attrs:{id:"三-那什么时候用-什么时候-用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-那什么时候用-什么时候-用"}},[t._v("#")]),t._v(" 三.那什么时候用$，什么时候 用")]),t._v(" "),s("p",[t._v("​    (1)对于变量部分， 应当使用#， 这样可以有效的防止sql注入，具体执行时，# 都是用到了"),s("code",[t._v("prepareStemen")]),t._v("t，这样对效率也有一定的提升")]),t._v(" "),s("p",[t._v("​      #方式一般用于传入插入/更新的值或查询/删除的where条件")]),t._v(" "),s("p",[t._v("​    (2) 只是简单的字符拼接而已，对于非变量部分， 那只能使用， 实际上， 在很多场合，$也是有很多实际意义的")]),t._v(" "),s("p",[t._v("​       $方式一般用于传入数据库对象．例如传入表名.")]),t._v(" "),s("p",[t._v("​       例如:")]),t._v(" "),s("p",[t._v("​       "),s("code",[t._v("select * from $tableName$")]),t._v(" 对于不同的表执行统一的查询")]),t._v(" "),s("p",[t._v("​       "),s("code",[t._v("update $tableName$ set name = #name#")]),t._v(" 每个实体一张表，改变不用实体的状态")]),t._v(" "),s("p",[t._v("​       特别说明， $只是字符串拼接，所以要特别小心"),s("code",[t._v("sql")]),t._v("注入问题。")]),t._v(" "),s("p",[t._v("(3)能同时用#和$的时候最好用#")]),t._v(" "),s("p",[t._v("~"),s("code",[t._v("myaql")]),t._v("~提供了"),s("code",[t._v("concat")]),t._v("方法能够把$的方法转化为#更加安全")]),t._v(" "),s("h3",{attrs:{id:"二-主键回填的两种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-主键回填的两种方式"}},[t._v("#")]),t._v(" 二.主键回填的两种方式")]),t._v(" "),s("p",[t._v("一般情况下，主键有两种生成方式：")]),t._v(" "),s("ol",[s("li",[t._v("主键自增长")]),t._v(" "),s("li",[t._v("自定义主键（一般可以使用UUID，或者类UUID）")])]),t._v(" "),s("h5",{attrs:{id:"方式一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式一"}},[t._v("#")]),t._v(" 方式一")]),t._v(" "),s("p",[t._v("第一种方式比较简单，也是松哥推荐的一种实现方式：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"insertBook"')]),t._v(" useGeneratedKeys"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v(" keyProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_book "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{name},#{author});")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("这种方式比较简单，就是在插入节点上添加 "),s("code",[t._v("useGeneratedKeys")]),t._v(" 属性，同时设置接收回传主键的属性。配置完成后，我们执行一个插入操作，插入时传入一个对象，插入完成后，这个对象的 "),s("code",[t._v("id")]),t._v("~就会被自动赋值，值就是刚刚插入成功的id。")]),t._v(" "),s("h5",{attrs:{id:"方式二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式二"}},[t._v("#")]),t._v(" 方式二")]),t._v(" "),s("p",[t._v("第二种方式则是利用"),s("code",[t._v("MySQL")]),t._v("自带的 "),s("code",[t._v("last_insert_id()")]),t._v(" 函数查询刚刚插入的id，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"insertBook"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("selectKey keyProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(" resultType"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java.lang.Integer"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" LAST_INSERT_ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("selectKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_book "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{name},#{author});")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("这种方式是在 insert 节点中添加 "),s("code",[t._v("selectKey")]),t._v(" 来实现主键回填，实际上这种方式的功能更加丰富，因为 s"),s("code",[t._v("electKey")]),t._v(" 节点中的 SQL 我们既可以在插入之前执行，也可以在插入之后执行（通过设置节点的 Order 属性为 AFTER 或者 BEFORE 可以实现），具体什么时候执行，还是要看具体的需求，如果是做主键回填，我们当然需要在插入 "),s("code",[t._v("SQL")]),t._v(" 执行之后执行 "),s("code",[t._v("selectKey")]),t._v("节点中的"),s("code",[t._v("SQL")]),t._v("。")]),t._v(" "),s("p",[t._v("注意第二种方式一样也要通过设置 "),s("code",[t._v("keyProperty")]),t._v(" 来指定将查询到的数据绑定到哪个属性上。")])])}),[],!1,null,null,null);s.default=r.exports}}]);