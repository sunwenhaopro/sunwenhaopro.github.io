(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{583:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"spring-boot-注意点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-注意点"}},[s._v("#")]),s._v(" spring boot 注意点")]),s._v(" "),t("h2",{attrs:{id:"bean方法参数自动赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bean方法参数自动赋值"}},[s._v("#")]),s._v(" @Bean方法参数自动赋值")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@ConditionalOnBean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MultipartResolver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@ConditionalOnMissingBean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"multipartResolver"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MultipartResolver")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("multipartResolver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MultipartResolver")]),s._v(" resolver"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" resolver"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n这个是文件上传解析器的配置，如果容器中，存在"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MultipartResolver")]),s._v("对象，不存在一个名为multipartResolver的bean，那么就会执行这个方法，在使用"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("注解的方法中，如果参数是一个对象的话，那么在创建此bean的时候，就会从容器中，寻找此类对象，并将此类对象自动赋值给这个对象，此操作可以防止，我们使用其他方法配置文件上传解析器的时候，没有使用规范的bean名字multipartResolver\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"拦截所有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拦截所有"}},[s._v("#")]),s._v(" 拦截所有")]),s._v(" "),t("p",[s._v("在原生tomcat中，拦截所有是"),t("code",[s._v("/css/*")]),s._v("，但是在spring中是"),t("code",[s._v("/css/**")]),s._v("，两颗星")])])}),[],!1,null,null,null);t.default=e.exports}}]);